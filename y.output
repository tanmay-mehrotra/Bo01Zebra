   0  $accept : goal $end

   1  goal : compilation_unit

   2  compilation_unit : compilation_unit declaration
   3                   | declaration

   4  declaration : function_declaration
   5              | variable_declaration
   6              | statement

   7  variable_declaration : type variable_declarator ';'

   8  variable_declarator : variable_declarator ',' variable_declarator1
   9                      | variable_declarator1

  10  variable_declarator1 : ad
  11                       | vd

  12  vd : IDENTIFIER

  13  ad : vd '[' expression ']'
  14     | vd '[' expression ']' '[' expression ']'

  15  function_declaration : FUNC function_header function_body

  16  function_header : type IDENTIFIER '(' formal_parameter_list ')'

  17  formal_parameter_list : formal_parameters
  18                        |

  19  formal_parameters : formal_parameters ',' formal_parameter
  20                    | formal_parameter

  21  formal_parameter : type IDENTIFIER

  22  function_body : block

  23  block : '{' block_statements_or_empty '}'

  24  block_statements_or_empty : block_statements
  25                            |

  26  block_statements : block_statements block_statement
  27                   | block_statement

  28  block_statement : local_variable_declaration_statement
  29                  | statement

  30  local_variable_declaration_statement : local_variable_declaration ';'

  31  local_variable_declaration : type variable_declarator

  32  statement : statement_without_trailing_substatement
  33            | if_then_statement
  34            | if_then_else_statement
  35            | while_statement

  36  statement_matched_if : statement_without_trailing_substatement
  37                       | if_then_else_statement_matched_if
  38                       | while_statement_matched_if

  39  statement_without_trailing_substatement : block
  40                                          | statement_expression ';'
  41                                          | do_statement
  42                                          | break_statement
  43                                          | continue_statement
  44                                          | return_statement
  45                                          | try_statement

  46  if_then_statement : IF '(' expression ')' statement

  47  if_then_else_statement : IF '(' expression ')' statement_matched_if ELSE statement

  48  if_then_else_statement_matched_if : IF '(' expression ')' statement_matched_if ELSE statement_matched_if

  49  do_statement : DO statement WHILE '(' expression ')' ';'

  50  while_statement : WHILE '(' expression ')' statement

  51  while_statement_matched_if : WHILE '(' expression ')' statement_matched_if

  52  expression_or_empty :
  53                      | expression

  54  statement_expression : assignment
  55                       | method_invocation

  56  break_statement : BREAK ';'

  57  continue_statement : CONTINUE ';'

  58  return_statement : RETURN expression_or_empty ';'

  59  try_statement : TRY block catches

  60  catches : catch_clause
  61          | catches catch_clause

  62  catch_clause : CATCH '(' formal_parameter ')' block

  63  expression : assignment_expression

  64  assignment_expression : conditional_expression
  65                        | assignment

  66  assignment : IDENTIFIER '=' assignment_expression
  67             | array_access '=' assignment_expression

  68  postfix_expression : IDENTIFIER
  69                     | literal
  70                     | '(' expression ')'
  71                     | method_invocation
  72                     | array_access
  73                     | IDENTIFIER '@' BITLITERAL

  74  array_access : IDENTIFIER '[' INTEGERLITERAL ']'
  75               | IDENTIFIER '@' BITLITERAL '[' expression ']'
  76               | IDENTIFIER '[' expression ']' '[' expression ']'

  77  method_invocation : IDENTIFIER '(' argument_list_opt ')'

  78  argument_list_opt :
  79                    | argument_list

  80  argument_list : expression
  81                | argument_list ',' expression

  82  unary_expression : '+' unary_expression
  83                   | '-' unary_expression
  84                   | unary_expression_not_plus_minus

  85  unary_expression_not_plus_minus : postfix_expression
  86                                  | '!' unary_expression
  87                                  | NOT unary_expression
  88                                  | cast_expression
  89                                  | postfix_expression '.' postfix_expression

  90  cast_expression : '(' type ')' unary_expression

  91  multiplicative_expression : unary_expression
  92                            | multiplicative_expression '*' unary_expression
  93                            | multiplicative_expression '/' unary_expression
  94                            | multiplicative_expression '%' unary_expression

  95  additive_expression : multiplicative_expression
  96                      | additive_expression '+' multiplicative_expression
  97                      | additive_expression '-' multiplicative_expression

  98  relational_expression : additive_expression
  99                        | relational_expression '<' additive_expression
 100                        | relational_expression '>' additive_expression
 101                        | relational_expression LEQ additive_expression
 102                        | relational_expression GEQ additive_expression

 103  equality_expression : relational_expression
 104                      | equality_expression DEQ relational_expression
 105                      | equality_expression NEQ relational_expression

 106  nand_gate_expression : equality_expression
 107                       | nand_gate_expression NAND equality_expression

 108  xnor_gate_expression : nand_gate_expression
 109                       | xnor_gate_expression XNOR nand_gate_expression

 110  nor_gate_expression : xnor_gate_expression
 111                      | nor_gate_expression NOR xnor_gate_expression

 112  and_expression : nor_gate_expression
 113                 | and_expression '&' nor_gate_expression
 114                 | and_expression AND nor_gate_expression

 115  exclusive_or_expression : and_expression
 116                          | exclusive_or_expression '^' and_expression
 117                          | exclusive_or_expression XOR and_expression

 118  inclusive_or_expression : exclusive_or_expression
 119                          | inclusive_or_expression '|' exclusive_or_expression
 120                          | inclusive_or_expression OR exclusive_or_expression

 121  conditional_and_expression : inclusive_or_expression
 122                             | conditional_and_expression SCAND inclusive_or_expression

 123  conditional_or_expression : conditional_and_expression
 124                            | conditional_or_expression SCOR conditional_and_expression

 125  conditional_expression : conditional_or_expression

 126  literal : STRINGLITERAL
 127          | INTEGERLITERAL
 128          | BEXPRESSIONLITERAL
 129          | BITLITERAL

 130  type : INT
 131       | BIT
 132       | BEXP
 133       | STRING
 134       | TRUTHTABLE
 135       | KMAP
 136       | ANYEXCEPTION

state 0
	$accept : . goal $end  (0)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	FUNC  shift 7
	INT  shift 8
	IF  shift 9
	KMAP  shift 10
	RETURN  shift 11
	STRING  shift 12
	TRY  shift 13
	TRUTHTABLE  shift 14
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	goal  goto 18
	compilation_unit  goto 19
	declaration  goto 20
	function_declaration  goto 21
	variable_declaration  goto 22
	statement  goto 23
	type  goto 24
	block  goto 25
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 1
	type : ANYEXCEPTION .  (136)

	.  reduce 136


state 2
	type : BEXP .  (132)

	.  reduce 132


state 3
	type : BIT .  (131)

	.  reduce 131


state 4
	break_statement : BREAK . ';'  (56)

	';'  shift 39
	.  error


state 5
	continue_statement : CONTINUE . ';'  (57)

	';'  shift 40
	.  error


state 6
	do_statement : DO . statement WHILE '(' expression ')' ';'  (49)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 9
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 41
	block  goto 25
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 7
	function_declaration : FUNC . function_header function_body  (15)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	INT  shift 8
	KMAP  shift 10
	STRING  shift 12
	TRUTHTABLE  shift 14
	.  error

	type  goto 42
	function_header  goto 43


state 8
	type : INT .  (130)

	.  reduce 130


state 9
	if_then_statement : IF . '(' expression ')' statement  (46)
	if_then_else_statement : IF . '(' expression ')' statement_matched_if ELSE statement  (47)

	'('  shift 44
	.  error


state 10
	type : KMAP .  (135)

	.  reduce 135


state 11
	return_statement : RETURN . expression_or_empty ';'  (58)
	expression_or_empty : .  (52)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	';'  reduce 52

	expression  goto 55
	expression_or_empty  goto 56
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 12
	type : STRING .  (133)

	.  reduce 133


state 13
	try_statement : TRY . block catches  (59)

	'{'  shift 17
	.  error

	block  goto 79


state 14
	type : TRUTHTABLE .  (134)

	.  reduce 134


state 15
	while_statement : WHILE . '(' expression ')' statement  (50)

	'('  shift 80
	.  error


state 16
	assignment : IDENTIFIER . '=' assignment_expression  (66)
	array_access : IDENTIFIER . '[' INTEGERLITERAL ']'  (74)
	array_access : IDENTIFIER . '@' BITLITERAL '[' expression ']'  (75)
	array_access : IDENTIFIER . '[' expression ']' '[' expression ']'  (76)
	method_invocation : IDENTIFIER . '(' argument_list_opt ')'  (77)

	'='  shift 81
	'@'  shift 82
	'['  shift 83
	'('  shift 84
	.  error


state 17
	block : '{' . block_statements_or_empty '}'  (23)
	block_statements_or_empty : .  (25)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	INT  shift 8
	IF  shift 9
	KMAP  shift 10
	RETURN  shift 11
	STRING  shift 12
	TRY  shift 13
	TRUTHTABLE  shift 14
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	'}'  reduce 25

	statement  goto 85
	type  goto 86
	block  goto 25
	block_statements_or_empty  goto 87
	block_statements  goto 88
	block_statement  goto 89
	local_variable_declaration_statement  goto 90
	local_variable_declaration  goto 91
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 18
	$accept : goal . $end  (0)

	$end  accept


state 19
	goal : compilation_unit .  (1)
	compilation_unit : compilation_unit . declaration  (2)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	FUNC  shift 7
	INT  shift 8
	IF  shift 9
	KMAP  shift 10
	RETURN  shift 11
	STRING  shift 12
	TRY  shift 13
	TRUTHTABLE  shift 14
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	$end  reduce 1

	declaration  goto 92
	function_declaration  goto 21
	variable_declaration  goto 22
	statement  goto 23
	type  goto 24
	block  goto 25
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 20
	compilation_unit : declaration .  (3)

	.  reduce 3


state 21
	declaration : function_declaration .  (4)

	.  reduce 4


state 22
	declaration : variable_declaration .  (5)

	.  reduce 5


state 23
	declaration : statement .  (6)

	.  reduce 6


state 24
	variable_declaration : type . variable_declarator ';'  (7)

	IDENTIFIER  shift 93
	.  error

	variable_declarator  goto 94
	variable_declarator1  goto 95
	ad  goto 96
	vd  goto 97


state 25
	statement_without_trailing_substatement : block .  (39)

	.  reduce 39


state 26
	statement : statement_without_trailing_substatement .  (32)

	.  reduce 32


state 27
	statement : if_then_statement .  (33)

	.  reduce 33


state 28
	statement : if_then_else_statement .  (34)

	.  reduce 34


state 29
	statement : while_statement .  (35)

	.  reduce 35


state 30
	statement_without_trailing_substatement : statement_expression . ';'  (40)

	';'  shift 98
	.  error


state 31
	statement_without_trailing_substatement : do_statement .  (41)

	.  reduce 41


state 32
	statement_without_trailing_substatement : break_statement .  (42)

	.  reduce 42


state 33
	statement_without_trailing_substatement : continue_statement .  (43)

	.  reduce 43


state 34
	statement_without_trailing_substatement : return_statement .  (44)

	.  reduce 44


state 35
	statement_without_trailing_substatement : try_statement .  (45)

	.  reduce 45


state 36
	statement_expression : assignment .  (54)

	.  reduce 54


state 37
	statement_expression : method_invocation .  (55)

	.  reduce 55


state 38
	assignment : array_access . '=' assignment_expression  (67)

	'='  shift 99
	.  error


state 39
	break_statement : BREAK ';' .  (56)

	.  reduce 56


state 40
	continue_statement : CONTINUE ';' .  (57)

	.  reduce 57


state 41
	do_statement : DO statement . WHILE '(' expression ')' ';'  (49)

	WHILE  shift 100
	.  error


state 42
	function_header : type . IDENTIFIER '(' formal_parameter_list ')'  (16)

	IDENTIFIER  shift 101
	.  error


state 43
	function_declaration : FUNC function_header . function_body  (15)

	'{'  shift 17
	.  error

	function_body  goto 102
	block  goto 103


state 44
	if_then_statement : IF '(' . expression ')' statement  (46)
	if_then_else_statement : IF '(' . expression ')' statement_matched_if ELSE statement  (47)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 104
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 45
	literal : INTEGERLITERAL .  (127)

	.  reduce 127


state 46
	literal : BITLITERAL .  (129)

	.  reduce 129


state 47
	literal : STRINGLITERAL .  (126)

	.  reduce 126


state 48
	literal : BEXPRESSIONLITERAL .  (128)

	.  reduce 128


state 49
	assignment : IDENTIFIER . '=' assignment_expression  (66)
	postfix_expression : IDENTIFIER .  (68)
	postfix_expression : IDENTIFIER . '@' BITLITERAL  (73)
	array_access : IDENTIFIER . '[' INTEGERLITERAL ']'  (74)
	array_access : IDENTIFIER . '@' BITLITERAL '[' expression ']'  (75)
	array_access : IDENTIFIER . '[' expression ']' '[' expression ']'  (76)
	method_invocation : IDENTIFIER . '(' argument_list_opt ')'  (77)

	'='  shift 81
	'@'  shift 105
	'['  shift 83
	'('  shift 84
	SCAND  reduce 68
	SCOR  reduce 68
	'*'  reduce 68
	'|'  reduce 68
	OR  reduce 68
	'^'  reduce 68
	XOR  reduce 68
	'&'  reduce 68
	AND  reduce 68
	'>'  reduce 68
	'<'  reduce 68
	LEQ  reduce 68
	GEQ  reduce 68
	DEQ  reduce 68
	NEQ  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'%'  reduce 68
	'/'  reduce 68
	NOR  reduce 68
	NAND  reduce 68
	XNOR  reduce 68
	'.'  reduce 68
	';'  reduce 68
	','  reduce 68
	']'  reduce 68
	')'  reduce 68


state 50
	unary_expression : '+' . unary_expression  (82)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 108
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 51
	unary_expression : '-' . unary_expression  (83)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 109
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 52
	unary_expression_not_plus_minus : '!' . unary_expression  (86)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 110
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 53
	unary_expression_not_plus_minus : NOT . unary_expression  (87)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 111
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 54
	postfix_expression : '(' . expression ')'  (70)
	cast_expression : '(' . type ')' unary_expression  (90)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	INT  shift 8
	KMAP  shift 10
	STRING  shift 12
	TRUTHTABLE  shift 14
	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	type  goto 112
	expression  goto 113
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 55
	expression_or_empty : expression .  (53)

	.  reduce 53


state 56
	return_statement : RETURN expression_or_empty . ';'  (58)

	';'  shift 114
	.  error


state 57
	assignment_expression : assignment .  (65)

	.  reduce 65


state 58
	postfix_expression : method_invocation .  (71)

	.  reduce 71


state 59
	expression : assignment_expression .  (63)

	.  reduce 63


state 60
	assignment_expression : conditional_expression .  (64)

	.  reduce 64


state 61
	assignment : array_access . '=' assignment_expression  (67)
	postfix_expression : array_access .  (72)

	'='  shift 99
	SCAND  reduce 72
	SCOR  reduce 72
	'*'  reduce 72
	'|'  reduce 72
	OR  reduce 72
	'^'  reduce 72
	XOR  reduce 72
	'&'  reduce 72
	AND  reduce 72
	'>'  reduce 72
	'<'  reduce 72
	LEQ  reduce 72
	GEQ  reduce 72
	DEQ  reduce 72
	NEQ  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'%'  reduce 72
	'/'  reduce 72
	NOR  reduce 72
	NAND  reduce 72
	XNOR  reduce 72
	'.'  reduce 72
	';'  reduce 72
	','  reduce 72
	']'  reduce 72
	')'  reduce 72


state 62
	unary_expression_not_plus_minus : postfix_expression .  (85)
	unary_expression_not_plus_minus : postfix_expression . '.' postfix_expression  (89)

	'.'  shift 115
	SCAND  reduce 85
	SCOR  reduce 85
	'*'  reduce 85
	'|'  reduce 85
	OR  reduce 85
	'^'  reduce 85
	XOR  reduce 85
	'&'  reduce 85
	AND  reduce 85
	'>'  reduce 85
	'<'  reduce 85
	LEQ  reduce 85
	GEQ  reduce 85
	DEQ  reduce 85
	NEQ  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	'%'  reduce 85
	'/'  reduce 85
	NOR  reduce 85
	NAND  reduce 85
	XNOR  reduce 85
	';'  reduce 85
	','  reduce 85
	']'  reduce 85
	')'  reduce 85


state 63
	postfix_expression : literal .  (69)

	.  reduce 69


state 64
	multiplicative_expression : unary_expression .  (91)

	.  reduce 91


state 65
	unary_expression : unary_expression_not_plus_minus .  (84)

	.  reduce 84


state 66
	unary_expression_not_plus_minus : cast_expression .  (88)

	.  reduce 88


state 67
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (92)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (93)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (94)
	additive_expression : multiplicative_expression .  (95)

	'*'  shift 116
	'%'  shift 117
	'/'  shift 118
	SCAND  reduce 95
	SCOR  reduce 95
	'|'  reduce 95
	OR  reduce 95
	'^'  reduce 95
	XOR  reduce 95
	'&'  reduce 95
	AND  reduce 95
	'>'  reduce 95
	'<'  reduce 95
	LEQ  reduce 95
	GEQ  reduce 95
	DEQ  reduce 95
	NEQ  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	NOR  reduce 95
	NAND  reduce 95
	XNOR  reduce 95
	';'  reduce 95
	','  reduce 95
	']'  reduce 95
	')'  reduce 95


state 68
	additive_expression : additive_expression . '+' multiplicative_expression  (96)
	additive_expression : additive_expression . '-' multiplicative_expression  (97)
	relational_expression : additive_expression .  (98)

	'+'  shift 119
	'-'  shift 120
	SCAND  reduce 98
	SCOR  reduce 98
	'|'  reduce 98
	OR  reduce 98
	'^'  reduce 98
	XOR  reduce 98
	'&'  reduce 98
	AND  reduce 98
	'>'  reduce 98
	'<'  reduce 98
	LEQ  reduce 98
	GEQ  reduce 98
	DEQ  reduce 98
	NEQ  reduce 98
	NOR  reduce 98
	NAND  reduce 98
	XNOR  reduce 98
	';'  reduce 98
	','  reduce 98
	']'  reduce 98
	')'  reduce 98


state 69
	relational_expression : relational_expression . '<' additive_expression  (99)
	relational_expression : relational_expression . '>' additive_expression  (100)
	relational_expression : relational_expression . LEQ additive_expression  (101)
	relational_expression : relational_expression . GEQ additive_expression  (102)
	equality_expression : relational_expression .  (103)

	'>'  shift 121
	'<'  shift 122
	LEQ  shift 123
	GEQ  shift 124
	SCAND  reduce 103
	SCOR  reduce 103
	'|'  reduce 103
	OR  reduce 103
	'^'  reduce 103
	XOR  reduce 103
	'&'  reduce 103
	AND  reduce 103
	DEQ  reduce 103
	NEQ  reduce 103
	NOR  reduce 103
	NAND  reduce 103
	XNOR  reduce 103
	';'  reduce 103
	','  reduce 103
	']'  reduce 103
	')'  reduce 103


state 70
	equality_expression : equality_expression . DEQ relational_expression  (104)
	equality_expression : equality_expression . NEQ relational_expression  (105)
	nand_gate_expression : equality_expression .  (106)

	DEQ  shift 125
	NEQ  shift 126
	SCAND  reduce 106
	SCOR  reduce 106
	'|'  reduce 106
	OR  reduce 106
	'^'  reduce 106
	XOR  reduce 106
	'&'  reduce 106
	AND  reduce 106
	NOR  reduce 106
	NAND  reduce 106
	XNOR  reduce 106
	';'  reduce 106
	','  reduce 106
	']'  reduce 106
	')'  reduce 106


state 71
	nand_gate_expression : nand_gate_expression . NAND equality_expression  (107)
	xnor_gate_expression : nand_gate_expression .  (108)

	NAND  shift 127
	SCAND  reduce 108
	SCOR  reduce 108
	'|'  reduce 108
	OR  reduce 108
	'^'  reduce 108
	XOR  reduce 108
	'&'  reduce 108
	AND  reduce 108
	NOR  reduce 108
	XNOR  reduce 108
	';'  reduce 108
	','  reduce 108
	']'  reduce 108
	')'  reduce 108


state 72
	xnor_gate_expression : xnor_gate_expression . XNOR nand_gate_expression  (109)
	nor_gate_expression : xnor_gate_expression .  (110)

	XNOR  shift 128
	SCAND  reduce 110
	SCOR  reduce 110
	'|'  reduce 110
	OR  reduce 110
	'^'  reduce 110
	XOR  reduce 110
	'&'  reduce 110
	AND  reduce 110
	NOR  reduce 110
	';'  reduce 110
	','  reduce 110
	']'  reduce 110
	')'  reduce 110


state 73
	nor_gate_expression : nor_gate_expression . NOR xnor_gate_expression  (111)
	and_expression : nor_gate_expression .  (112)

	NOR  shift 129
	SCAND  reduce 112
	SCOR  reduce 112
	'|'  reduce 112
	OR  reduce 112
	'^'  reduce 112
	XOR  reduce 112
	'&'  reduce 112
	AND  reduce 112
	';'  reduce 112
	','  reduce 112
	']'  reduce 112
	')'  reduce 112


state 74
	and_expression : and_expression . '&' nor_gate_expression  (113)
	and_expression : and_expression . AND nor_gate_expression  (114)
	exclusive_or_expression : and_expression .  (115)

	'&'  shift 130
	AND  shift 131
	SCAND  reduce 115
	SCOR  reduce 115
	'|'  reduce 115
	OR  reduce 115
	'^'  reduce 115
	XOR  reduce 115
	';'  reduce 115
	','  reduce 115
	']'  reduce 115
	')'  reduce 115


state 75
	exclusive_or_expression : exclusive_or_expression . '^' and_expression  (116)
	exclusive_or_expression : exclusive_or_expression . XOR and_expression  (117)
	inclusive_or_expression : exclusive_or_expression .  (118)

	'^'  shift 132
	XOR  shift 133
	SCAND  reduce 118
	SCOR  reduce 118
	'|'  reduce 118
	OR  reduce 118
	';'  reduce 118
	','  reduce 118
	']'  reduce 118
	')'  reduce 118


state 76
	inclusive_or_expression : inclusive_or_expression . '|' exclusive_or_expression  (119)
	inclusive_or_expression : inclusive_or_expression . OR exclusive_or_expression  (120)
	conditional_and_expression : inclusive_or_expression .  (121)

	'|'  shift 134
	OR  shift 135
	SCAND  reduce 121
	SCOR  reduce 121
	';'  reduce 121
	','  reduce 121
	']'  reduce 121
	')'  reduce 121


state 77
	conditional_and_expression : conditional_and_expression . SCAND inclusive_or_expression  (122)
	conditional_or_expression : conditional_and_expression .  (123)

	SCAND  shift 136
	SCOR  reduce 123
	';'  reduce 123
	','  reduce 123
	']'  reduce 123
	')'  reduce 123


state 78
	conditional_or_expression : conditional_or_expression . SCOR conditional_and_expression  (124)
	conditional_expression : conditional_or_expression .  (125)

	SCOR  shift 137
	';'  reduce 125
	','  reduce 125
	']'  reduce 125
	')'  reduce 125


state 79
	try_statement : TRY block . catches  (59)

	CATCH  shift 138
	.  error

	catches  goto 139
	catch_clause  goto 140


state 80
	while_statement : WHILE '(' . expression ')' statement  (50)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 141
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 81
	assignment : IDENTIFIER '=' . assignment_expression  (66)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 142
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 82
	array_access : IDENTIFIER '@' . BITLITERAL '[' expression ']'  (75)

	BITLITERAL  shift 143
	.  error


state 83
	array_access : IDENTIFIER '[' . INTEGERLITERAL ']'  (74)
	array_access : IDENTIFIER '[' . expression ']' '[' expression ']'  (76)

	INTEGERLITERAL  shift 144
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 145
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 84
	method_invocation : IDENTIFIER '(' . argument_list_opt ')'  (77)
	argument_list_opt : .  (78)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	')'  reduce 78

	expression  goto 146
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	argument_list_opt  goto 147
	argument_list  goto 148
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 85
	block_statement : statement .  (29)

	.  reduce 29


state 86
	local_variable_declaration : type . variable_declarator  (31)

	IDENTIFIER  shift 93
	.  error

	variable_declarator  goto 149
	variable_declarator1  goto 95
	ad  goto 96
	vd  goto 97


state 87
	block : '{' block_statements_or_empty . '}'  (23)

	'}'  shift 150
	.  error


state 88
	block_statements_or_empty : block_statements .  (24)
	block_statements : block_statements . block_statement  (26)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	INT  shift 8
	IF  shift 9
	KMAP  shift 10
	RETURN  shift 11
	STRING  shift 12
	TRY  shift 13
	TRUTHTABLE  shift 14
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	'}'  reduce 24

	statement  goto 85
	type  goto 86
	block  goto 25
	block_statement  goto 151
	local_variable_declaration_statement  goto 90
	local_variable_declaration  goto 91
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 89
	block_statements : block_statement .  (27)

	.  reduce 27


state 90
	block_statement : local_variable_declaration_statement .  (28)

	.  reduce 28


state 91
	local_variable_declaration_statement : local_variable_declaration . ';'  (30)

	';'  shift 152
	.  error


state 92
	compilation_unit : compilation_unit declaration .  (2)

	.  reduce 2


state 93
	vd : IDENTIFIER .  (12)

	.  reduce 12


state 94
	variable_declaration : type variable_declarator . ';'  (7)
	variable_declarator : variable_declarator . ',' variable_declarator1  (8)

	';'  shift 153
	','  shift 154
	.  error


state 95
	variable_declarator : variable_declarator1 .  (9)

	.  reduce 9


state 96
	variable_declarator1 : ad .  (10)

	.  reduce 10


state 97
	variable_declarator1 : vd .  (11)
	ad : vd . '[' expression ']'  (13)
	ad : vd . '[' expression ']' '[' expression ']'  (14)

	'['  shift 155
	';'  reduce 11
	','  reduce 11


state 98
	statement_without_trailing_substatement : statement_expression ';' .  (40)

	.  reduce 40


state 99
	assignment : array_access '=' . assignment_expression  (67)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 156
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 100
	do_statement : DO statement WHILE . '(' expression ')' ';'  (49)

	'('  shift 157
	.  error


state 101
	function_header : type IDENTIFIER . '(' formal_parameter_list ')'  (16)

	'('  shift 158
	.  error


state 102
	function_declaration : FUNC function_header function_body .  (15)

	.  reduce 15


state 103
	function_body : block .  (22)

	.  reduce 22


state 104
	if_then_statement : IF '(' expression . ')' statement  (46)
	if_then_else_statement : IF '(' expression . ')' statement_matched_if ELSE statement  (47)

	')'  shift 159
	.  error


state 105
	postfix_expression : IDENTIFIER '@' . BITLITERAL  (73)
	array_access : IDENTIFIER '@' . BITLITERAL '[' expression ']'  (75)

	BITLITERAL  shift 160
	.  error


state 106
	postfix_expression : IDENTIFIER .  (68)
	postfix_expression : IDENTIFIER . '@' BITLITERAL  (73)
	array_access : IDENTIFIER . '[' INTEGERLITERAL ']'  (74)
	array_access : IDENTIFIER . '@' BITLITERAL '[' expression ']'  (75)
	array_access : IDENTIFIER . '[' expression ']' '[' expression ']'  (76)
	method_invocation : IDENTIFIER . '(' argument_list_opt ')'  (77)

	'@'  shift 105
	'['  shift 83
	'('  shift 84
	SCAND  reduce 68
	SCOR  reduce 68
	'*'  reduce 68
	'|'  reduce 68
	OR  reduce 68
	'^'  reduce 68
	XOR  reduce 68
	'&'  reduce 68
	AND  reduce 68
	'>'  reduce 68
	'<'  reduce 68
	LEQ  reduce 68
	GEQ  reduce 68
	DEQ  reduce 68
	NEQ  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'%'  reduce 68
	'/'  reduce 68
	NOR  reduce 68
	NAND  reduce 68
	XNOR  reduce 68
	'.'  reduce 68
	';'  reduce 68
	','  reduce 68
	']'  reduce 68
	')'  reduce 68


state 107
	postfix_expression : array_access .  (72)

	.  reduce 72


state 108
	unary_expression : '+' unary_expression .  (82)

	.  reduce 82


state 109
	unary_expression : '-' unary_expression .  (83)

	.  reduce 83


state 110
	unary_expression_not_plus_minus : '!' unary_expression .  (86)

	.  reduce 86


state 111
	unary_expression_not_plus_minus : NOT unary_expression .  (87)

	.  reduce 87


state 112
	cast_expression : '(' type . ')' unary_expression  (90)

	')'  shift 161
	.  error


state 113
	postfix_expression : '(' expression . ')'  (70)

	')'  shift 162
	.  error


state 114
	return_statement : RETURN expression_or_empty ';' .  (58)

	.  reduce 58


state 115
	unary_expression_not_plus_minus : postfix_expression '.' . postfix_expression  (89)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'('  shift 163
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 164
	literal  goto 63


state 116
	multiplicative_expression : multiplicative_expression '*' . unary_expression  (92)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 165
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 117
	multiplicative_expression : multiplicative_expression '%' . unary_expression  (94)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 166
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 118
	multiplicative_expression : multiplicative_expression '/' . unary_expression  (93)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 167
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 119
	additive_expression : additive_expression '+' . multiplicative_expression  (96)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 168


state 120
	additive_expression : additive_expression '-' . multiplicative_expression  (97)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 169


state 121
	relational_expression : relational_expression '>' . additive_expression  (100)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 170


state 122
	relational_expression : relational_expression '<' . additive_expression  (99)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 171


state 123
	relational_expression : relational_expression LEQ . additive_expression  (101)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 172


state 124
	relational_expression : relational_expression GEQ . additive_expression  (102)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 173


state 125
	equality_expression : equality_expression DEQ . relational_expression  (104)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 174


state 126
	equality_expression : equality_expression NEQ . relational_expression  (105)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 175


state 127
	nand_gate_expression : nand_gate_expression NAND . equality_expression  (107)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 176


state 128
	xnor_gate_expression : xnor_gate_expression XNOR . nand_gate_expression  (109)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 177


state 129
	nor_gate_expression : nor_gate_expression NOR . xnor_gate_expression  (111)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 178


state 130
	and_expression : and_expression '&' . nor_gate_expression  (113)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 179


state 131
	and_expression : and_expression AND . nor_gate_expression  (114)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 180


state 132
	exclusive_or_expression : exclusive_or_expression '^' . and_expression  (116)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 181


state 133
	exclusive_or_expression : exclusive_or_expression XOR . and_expression  (117)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 182


state 134
	inclusive_or_expression : inclusive_or_expression '|' . exclusive_or_expression  (119)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 183


state 135
	inclusive_or_expression : inclusive_or_expression OR . exclusive_or_expression  (120)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 184


state 136
	conditional_and_expression : conditional_and_expression SCAND . inclusive_or_expression  (122)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 185


state 137
	conditional_or_expression : conditional_or_expression SCOR . conditional_and_expression  (124)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 186


state 138
	catch_clause : CATCH . '(' formal_parameter ')' block  (62)

	'('  shift 187
	.  error


state 139
	try_statement : TRY block catches .  (59)
	catches : catches . catch_clause  (61)

	CATCH  shift 138
	$end  reduce 59
	ANYEXCEPTION  reduce 59
	BEXP  reduce 59
	BIT  reduce 59
	BREAK  reduce 59
	CONTINUE  reduce 59
	DO  reduce 59
	ELSE  reduce 59
	FUNC  reduce 59
	INT  reduce 59
	IF  reduce 59
	KMAP  reduce 59
	RETURN  reduce 59
	STRING  reduce 59
	TRY  reduce 59
	TRUTHTABLE  reduce 59
	WHILE  reduce 59
	IDENTIFIER  reduce 59
	'{'  reduce 59
	'}'  reduce 59

	catch_clause  goto 188


state 140
	catches : catch_clause .  (60)

	.  reduce 60


state 141
	while_statement : WHILE '(' expression . ')' statement  (50)

	')'  shift 189
	.  error


state 142
	assignment : IDENTIFIER '=' assignment_expression .  (66)

	.  reduce 66


state 143
	array_access : IDENTIFIER '@' BITLITERAL . '[' expression ']'  (75)

	'['  shift 190
	.  error


144: shift/reduce conflict (shift 191, reduce 127) on ']'
state 144
	array_access : IDENTIFIER '[' INTEGERLITERAL . ']'  (74)
	literal : INTEGERLITERAL .  (127)

	']'  shift 191
	SCAND  reduce 127
	SCOR  reduce 127
	'*'  reduce 127
	'|'  reduce 127
	OR  reduce 127
	'^'  reduce 127
	XOR  reduce 127
	'&'  reduce 127
	AND  reduce 127
	'>'  reduce 127
	'<'  reduce 127
	LEQ  reduce 127
	GEQ  reduce 127
	DEQ  reduce 127
	NEQ  reduce 127
	'+'  reduce 127
	'-'  reduce 127
	'%'  reduce 127
	'/'  reduce 127
	NOR  reduce 127
	NAND  reduce 127
	XNOR  reduce 127
	'.'  reduce 127


state 145
	array_access : IDENTIFIER '[' expression . ']' '[' expression ']'  (76)

	']'  shift 192
	.  error


state 146
	argument_list : expression .  (80)

	.  reduce 80


state 147
	method_invocation : IDENTIFIER '(' argument_list_opt . ')'  (77)

	')'  shift 193
	.  error


state 148
	argument_list_opt : argument_list .  (79)
	argument_list : argument_list . ',' expression  (81)

	','  shift 194
	')'  reduce 79


state 149
	variable_declarator : variable_declarator . ',' variable_declarator1  (8)
	local_variable_declaration : type variable_declarator .  (31)

	','  shift 154
	';'  reduce 31


state 150
	block : '{' block_statements_or_empty '}' .  (23)

	.  reduce 23


state 151
	block_statements : block_statements block_statement .  (26)

	.  reduce 26


state 152
	local_variable_declaration_statement : local_variable_declaration ';' .  (30)

	.  reduce 30


state 153
	variable_declaration : type variable_declarator ';' .  (7)

	.  reduce 7


state 154
	variable_declarator : variable_declarator ',' . variable_declarator1  (8)

	IDENTIFIER  shift 93
	.  error

	variable_declarator1  goto 195
	ad  goto 96
	vd  goto 97


state 155
	ad : vd '[' . expression ']'  (13)
	ad : vd '[' . expression ']' '[' expression ']'  (14)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 196
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 156
	assignment : array_access '=' assignment_expression .  (67)

	.  reduce 67


state 157
	do_statement : DO statement WHILE '(' . expression ')' ';'  (49)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 197
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 158
	function_header : type IDENTIFIER '(' . formal_parameter_list ')'  (16)
	formal_parameter_list : .  (18)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	INT  shift 8
	KMAP  shift 10
	STRING  shift 12
	TRUTHTABLE  shift 14
	')'  reduce 18

	type  goto 198
	formal_parameter_list  goto 199
	formal_parameters  goto 200
	formal_parameter  goto 201


state 159
	if_then_statement : IF '(' expression ')' . statement  (46)
	if_then_else_statement : IF '(' expression ')' . statement_matched_if ELSE statement  (47)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 202
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 203
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 204
	block  goto 25
	statement_without_trailing_substatement  goto 205
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_matched_if  goto 206
	if_then_else_statement_matched_if  goto 207
	while_statement_matched_if  goto 208
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 160
	postfix_expression : IDENTIFIER '@' BITLITERAL .  (73)
	array_access : IDENTIFIER '@' BITLITERAL . '[' expression ']'  (75)

	'['  shift 190
	SCAND  reduce 73
	SCOR  reduce 73
	'*'  reduce 73
	'|'  reduce 73
	OR  reduce 73
	'^'  reduce 73
	XOR  reduce 73
	'&'  reduce 73
	AND  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	LEQ  reduce 73
	GEQ  reduce 73
	DEQ  reduce 73
	NEQ  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'%'  reduce 73
	'/'  reduce 73
	NOR  reduce 73
	NAND  reduce 73
	XNOR  reduce 73
	'.'  reduce 73
	';'  reduce 73
	','  reduce 73
	']'  reduce 73
	')'  reduce 73


state 161
	cast_expression : '(' type ')' . unary_expression  (90)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 106
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	method_invocation  goto 58
	array_access  goto 107
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 209
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66


state 162
	postfix_expression : '(' expression ')' .  (70)

	.  reduce 70


state 163
	postfix_expression : '(' . expression ')'  (70)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 113
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 164
	unary_expression_not_plus_minus : postfix_expression '.' postfix_expression .  (89)

	.  reduce 89


state 165
	multiplicative_expression : multiplicative_expression '*' unary_expression .  (92)

	.  reduce 92


state 166
	multiplicative_expression : multiplicative_expression '%' unary_expression .  (94)

	.  reduce 94


state 167
	multiplicative_expression : multiplicative_expression '/' unary_expression .  (93)

	.  reduce 93


state 168
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (92)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (93)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (94)
	additive_expression : additive_expression '+' multiplicative_expression .  (96)

	'*'  shift 116
	'%'  shift 117
	'/'  shift 118
	SCAND  reduce 96
	SCOR  reduce 96
	'|'  reduce 96
	OR  reduce 96
	'^'  reduce 96
	XOR  reduce 96
	'&'  reduce 96
	AND  reduce 96
	'>'  reduce 96
	'<'  reduce 96
	LEQ  reduce 96
	GEQ  reduce 96
	DEQ  reduce 96
	NEQ  reduce 96
	'+'  reduce 96
	'-'  reduce 96
	NOR  reduce 96
	NAND  reduce 96
	XNOR  reduce 96
	';'  reduce 96
	','  reduce 96
	']'  reduce 96
	')'  reduce 96


state 169
	multiplicative_expression : multiplicative_expression . '*' unary_expression  (92)
	multiplicative_expression : multiplicative_expression . '/' unary_expression  (93)
	multiplicative_expression : multiplicative_expression . '%' unary_expression  (94)
	additive_expression : additive_expression '-' multiplicative_expression .  (97)

	'*'  shift 116
	'%'  shift 117
	'/'  shift 118
	SCAND  reduce 97
	SCOR  reduce 97
	'|'  reduce 97
	OR  reduce 97
	'^'  reduce 97
	XOR  reduce 97
	'&'  reduce 97
	AND  reduce 97
	'>'  reduce 97
	'<'  reduce 97
	LEQ  reduce 97
	GEQ  reduce 97
	DEQ  reduce 97
	NEQ  reduce 97
	'+'  reduce 97
	'-'  reduce 97
	NOR  reduce 97
	NAND  reduce 97
	XNOR  reduce 97
	';'  reduce 97
	','  reduce 97
	']'  reduce 97
	')'  reduce 97


state 170
	additive_expression : additive_expression . '+' multiplicative_expression  (96)
	additive_expression : additive_expression . '-' multiplicative_expression  (97)
	relational_expression : relational_expression '>' additive_expression .  (100)

	'+'  shift 119
	'-'  shift 120
	SCAND  reduce 100
	SCOR  reduce 100
	'|'  reduce 100
	OR  reduce 100
	'^'  reduce 100
	XOR  reduce 100
	'&'  reduce 100
	AND  reduce 100
	'>'  reduce 100
	'<'  reduce 100
	LEQ  reduce 100
	GEQ  reduce 100
	DEQ  reduce 100
	NEQ  reduce 100
	NOR  reduce 100
	NAND  reduce 100
	XNOR  reduce 100
	';'  reduce 100
	','  reduce 100
	']'  reduce 100
	')'  reduce 100


state 171
	additive_expression : additive_expression . '+' multiplicative_expression  (96)
	additive_expression : additive_expression . '-' multiplicative_expression  (97)
	relational_expression : relational_expression '<' additive_expression .  (99)

	'+'  shift 119
	'-'  shift 120
	SCAND  reduce 99
	SCOR  reduce 99
	'|'  reduce 99
	OR  reduce 99
	'^'  reduce 99
	XOR  reduce 99
	'&'  reduce 99
	AND  reduce 99
	'>'  reduce 99
	'<'  reduce 99
	LEQ  reduce 99
	GEQ  reduce 99
	DEQ  reduce 99
	NEQ  reduce 99
	NOR  reduce 99
	NAND  reduce 99
	XNOR  reduce 99
	';'  reduce 99
	','  reduce 99
	']'  reduce 99
	')'  reduce 99


state 172
	additive_expression : additive_expression . '+' multiplicative_expression  (96)
	additive_expression : additive_expression . '-' multiplicative_expression  (97)
	relational_expression : relational_expression LEQ additive_expression .  (101)

	'+'  shift 119
	'-'  shift 120
	SCAND  reduce 101
	SCOR  reduce 101
	'|'  reduce 101
	OR  reduce 101
	'^'  reduce 101
	XOR  reduce 101
	'&'  reduce 101
	AND  reduce 101
	'>'  reduce 101
	'<'  reduce 101
	LEQ  reduce 101
	GEQ  reduce 101
	DEQ  reduce 101
	NEQ  reduce 101
	NOR  reduce 101
	NAND  reduce 101
	XNOR  reduce 101
	';'  reduce 101
	','  reduce 101
	']'  reduce 101
	')'  reduce 101


state 173
	additive_expression : additive_expression . '+' multiplicative_expression  (96)
	additive_expression : additive_expression . '-' multiplicative_expression  (97)
	relational_expression : relational_expression GEQ additive_expression .  (102)

	'+'  shift 119
	'-'  shift 120
	SCAND  reduce 102
	SCOR  reduce 102
	'|'  reduce 102
	OR  reduce 102
	'^'  reduce 102
	XOR  reduce 102
	'&'  reduce 102
	AND  reduce 102
	'>'  reduce 102
	'<'  reduce 102
	LEQ  reduce 102
	GEQ  reduce 102
	DEQ  reduce 102
	NEQ  reduce 102
	NOR  reduce 102
	NAND  reduce 102
	XNOR  reduce 102
	';'  reduce 102
	','  reduce 102
	']'  reduce 102
	')'  reduce 102


state 174
	relational_expression : relational_expression . '<' additive_expression  (99)
	relational_expression : relational_expression . '>' additive_expression  (100)
	relational_expression : relational_expression . LEQ additive_expression  (101)
	relational_expression : relational_expression . GEQ additive_expression  (102)
	equality_expression : equality_expression DEQ relational_expression .  (104)

	'>'  shift 121
	'<'  shift 122
	LEQ  shift 123
	GEQ  shift 124
	SCAND  reduce 104
	SCOR  reduce 104
	'|'  reduce 104
	OR  reduce 104
	'^'  reduce 104
	XOR  reduce 104
	'&'  reduce 104
	AND  reduce 104
	DEQ  reduce 104
	NEQ  reduce 104
	NOR  reduce 104
	NAND  reduce 104
	XNOR  reduce 104
	';'  reduce 104
	','  reduce 104
	']'  reduce 104
	')'  reduce 104


state 175
	relational_expression : relational_expression . '<' additive_expression  (99)
	relational_expression : relational_expression . '>' additive_expression  (100)
	relational_expression : relational_expression . LEQ additive_expression  (101)
	relational_expression : relational_expression . GEQ additive_expression  (102)
	equality_expression : equality_expression NEQ relational_expression .  (105)

	'>'  shift 121
	'<'  shift 122
	LEQ  shift 123
	GEQ  shift 124
	SCAND  reduce 105
	SCOR  reduce 105
	'|'  reduce 105
	OR  reduce 105
	'^'  reduce 105
	XOR  reduce 105
	'&'  reduce 105
	AND  reduce 105
	DEQ  reduce 105
	NEQ  reduce 105
	NOR  reduce 105
	NAND  reduce 105
	XNOR  reduce 105
	';'  reduce 105
	','  reduce 105
	']'  reduce 105
	')'  reduce 105


state 176
	equality_expression : equality_expression . DEQ relational_expression  (104)
	equality_expression : equality_expression . NEQ relational_expression  (105)
	nand_gate_expression : nand_gate_expression NAND equality_expression .  (107)

	DEQ  shift 125
	NEQ  shift 126
	SCAND  reduce 107
	SCOR  reduce 107
	'|'  reduce 107
	OR  reduce 107
	'^'  reduce 107
	XOR  reduce 107
	'&'  reduce 107
	AND  reduce 107
	NOR  reduce 107
	NAND  reduce 107
	XNOR  reduce 107
	';'  reduce 107
	','  reduce 107
	']'  reduce 107
	')'  reduce 107


state 177
	nand_gate_expression : nand_gate_expression . NAND equality_expression  (107)
	xnor_gate_expression : xnor_gate_expression XNOR nand_gate_expression .  (109)

	NAND  shift 127
	SCAND  reduce 109
	SCOR  reduce 109
	'|'  reduce 109
	OR  reduce 109
	'^'  reduce 109
	XOR  reduce 109
	'&'  reduce 109
	AND  reduce 109
	NOR  reduce 109
	XNOR  reduce 109
	';'  reduce 109
	','  reduce 109
	']'  reduce 109
	')'  reduce 109


state 178
	xnor_gate_expression : xnor_gate_expression . XNOR nand_gate_expression  (109)
	nor_gate_expression : nor_gate_expression NOR xnor_gate_expression .  (111)

	XNOR  shift 128
	SCAND  reduce 111
	SCOR  reduce 111
	'|'  reduce 111
	OR  reduce 111
	'^'  reduce 111
	XOR  reduce 111
	'&'  reduce 111
	AND  reduce 111
	NOR  reduce 111
	';'  reduce 111
	','  reduce 111
	']'  reduce 111
	')'  reduce 111


state 179
	nor_gate_expression : nor_gate_expression . NOR xnor_gate_expression  (111)
	and_expression : and_expression '&' nor_gate_expression .  (113)

	NOR  shift 129
	SCAND  reduce 113
	SCOR  reduce 113
	'|'  reduce 113
	OR  reduce 113
	'^'  reduce 113
	XOR  reduce 113
	'&'  reduce 113
	AND  reduce 113
	';'  reduce 113
	','  reduce 113
	']'  reduce 113
	')'  reduce 113


state 180
	nor_gate_expression : nor_gate_expression . NOR xnor_gate_expression  (111)
	and_expression : and_expression AND nor_gate_expression .  (114)

	NOR  shift 129
	SCAND  reduce 114
	SCOR  reduce 114
	'|'  reduce 114
	OR  reduce 114
	'^'  reduce 114
	XOR  reduce 114
	'&'  reduce 114
	AND  reduce 114
	';'  reduce 114
	','  reduce 114
	']'  reduce 114
	')'  reduce 114


state 181
	and_expression : and_expression . '&' nor_gate_expression  (113)
	and_expression : and_expression . AND nor_gate_expression  (114)
	exclusive_or_expression : exclusive_or_expression '^' and_expression .  (116)

	'&'  shift 130
	AND  shift 131
	SCAND  reduce 116
	SCOR  reduce 116
	'|'  reduce 116
	OR  reduce 116
	'^'  reduce 116
	XOR  reduce 116
	';'  reduce 116
	','  reduce 116
	']'  reduce 116
	')'  reduce 116


state 182
	and_expression : and_expression . '&' nor_gate_expression  (113)
	and_expression : and_expression . AND nor_gate_expression  (114)
	exclusive_or_expression : exclusive_or_expression XOR and_expression .  (117)

	'&'  shift 130
	AND  shift 131
	SCAND  reduce 117
	SCOR  reduce 117
	'|'  reduce 117
	OR  reduce 117
	'^'  reduce 117
	XOR  reduce 117
	';'  reduce 117
	','  reduce 117
	']'  reduce 117
	')'  reduce 117


state 183
	exclusive_or_expression : exclusive_or_expression . '^' and_expression  (116)
	exclusive_or_expression : exclusive_or_expression . XOR and_expression  (117)
	inclusive_or_expression : inclusive_or_expression '|' exclusive_or_expression .  (119)

	'^'  shift 132
	XOR  shift 133
	SCAND  reduce 119
	SCOR  reduce 119
	'|'  reduce 119
	OR  reduce 119
	';'  reduce 119
	','  reduce 119
	']'  reduce 119
	')'  reduce 119


state 184
	exclusive_or_expression : exclusive_or_expression . '^' and_expression  (116)
	exclusive_or_expression : exclusive_or_expression . XOR and_expression  (117)
	inclusive_or_expression : inclusive_or_expression OR exclusive_or_expression .  (120)

	'^'  shift 132
	XOR  shift 133
	SCAND  reduce 120
	SCOR  reduce 120
	'|'  reduce 120
	OR  reduce 120
	';'  reduce 120
	','  reduce 120
	']'  reduce 120
	')'  reduce 120


state 185
	inclusive_or_expression : inclusive_or_expression . '|' exclusive_or_expression  (119)
	inclusive_or_expression : inclusive_or_expression . OR exclusive_or_expression  (120)
	conditional_and_expression : conditional_and_expression SCAND inclusive_or_expression .  (122)

	'|'  shift 134
	OR  shift 135
	SCAND  reduce 122
	SCOR  reduce 122
	';'  reduce 122
	','  reduce 122
	']'  reduce 122
	')'  reduce 122


state 186
	conditional_and_expression : conditional_and_expression . SCAND inclusive_or_expression  (122)
	conditional_or_expression : conditional_or_expression SCOR conditional_and_expression .  (124)

	SCAND  shift 136
	SCOR  reduce 124
	';'  reduce 124
	','  reduce 124
	']'  reduce 124
	')'  reduce 124


state 187
	catch_clause : CATCH '(' . formal_parameter ')' block  (62)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	INT  shift 8
	KMAP  shift 10
	STRING  shift 12
	TRUTHTABLE  shift 14
	.  error

	type  goto 198
	formal_parameter  goto 210


state 188
	catches : catches catch_clause .  (61)

	.  reduce 61


state 189
	while_statement : WHILE '(' expression ')' . statement  (50)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 9
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 211
	block  goto 25
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 190
	array_access : IDENTIFIER '@' BITLITERAL '[' . expression ']'  (75)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 212
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 191
	array_access : IDENTIFIER '[' INTEGERLITERAL ']' .  (74)

	.  reduce 74


state 192
	array_access : IDENTIFIER '[' expression ']' . '[' expression ']'  (76)

	'['  shift 213
	.  error


state 193
	method_invocation : IDENTIFIER '(' argument_list_opt ')' .  (77)

	.  reduce 77


state 194
	argument_list : argument_list ',' . expression  (81)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 214
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 195
	variable_declarator : variable_declarator ',' variable_declarator1 .  (8)

	.  reduce 8


state 196
	ad : vd '[' expression . ']'  (13)
	ad : vd '[' expression . ']' '[' expression ']'  (14)

	']'  shift 215
	.  error


state 197
	do_statement : DO statement WHILE '(' expression . ')' ';'  (49)

	')'  shift 216
	.  error


state 198
	formal_parameter : type . IDENTIFIER  (21)

	IDENTIFIER  shift 217
	.  error


state 199
	function_header : type IDENTIFIER '(' formal_parameter_list . ')'  (16)

	')'  shift 218
	.  error


state 200
	formal_parameter_list : formal_parameters .  (17)
	formal_parameters : formal_parameters . ',' formal_parameter  (19)

	','  shift 219
	')'  reduce 17


state 201
	formal_parameters : formal_parameter .  (20)

	.  reduce 20


state 202
	if_then_statement : IF . '(' expression ')' statement  (46)
	if_then_else_statement : IF . '(' expression ')' statement_matched_if ELSE statement  (47)
	if_then_else_statement_matched_if : IF . '(' expression ')' statement_matched_if ELSE statement_matched_if  (48)

	'('  shift 220
	.  error


state 203
	while_statement : WHILE . '(' expression ')' statement  (50)
	while_statement_matched_if : WHILE . '(' expression ')' statement_matched_if  (51)

	'('  shift 221
	.  error


state 204
	if_then_statement : IF '(' expression ')' statement .  (46)

	.  reduce 46


state 205
	statement : statement_without_trailing_substatement .  (32)
	statement_matched_if : statement_without_trailing_substatement .  (36)

	$end  reduce 32
	ANYEXCEPTION  reduce 32
	BEXP  reduce 32
	BIT  reduce 32
	BREAK  reduce 32
	CONTINUE  reduce 32
	DO  reduce 32
	ELSE  reduce 36
	FUNC  reduce 32
	INT  reduce 32
	IF  reduce 32
	KMAP  reduce 32
	RETURN  reduce 32
	STRING  reduce 32
	TRY  reduce 32
	TRUTHTABLE  reduce 32
	WHILE  reduce 32
	IDENTIFIER  reduce 32
	'{'  reduce 32
	'}'  reduce 32


state 206
	if_then_else_statement : IF '(' expression ')' statement_matched_if . ELSE statement  (47)

	ELSE  shift 222
	.  error


state 207
	statement_matched_if : if_then_else_statement_matched_if .  (37)

	.  reduce 37


state 208
	statement_matched_if : while_statement_matched_if .  (38)

	.  reduce 38


state 209
	cast_expression : '(' type ')' unary_expression .  (90)

	.  reduce 90


state 210
	catch_clause : CATCH '(' formal_parameter . ')' block  (62)

	')'  shift 223
	.  error


state 211
	while_statement : WHILE '(' expression ')' statement .  (50)

	.  reduce 50


state 212
	array_access : IDENTIFIER '@' BITLITERAL '[' expression . ']'  (75)

	']'  shift 224
	.  error


state 213
	array_access : IDENTIFIER '[' expression ']' '[' . expression ']'  (76)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 225
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 214
	argument_list : argument_list ',' expression .  (81)

	.  reduce 81


state 215
	ad : vd '[' expression ']' .  (13)
	ad : vd '[' expression ']' . '[' expression ']'  (14)

	'['  shift 226
	';'  reduce 13
	','  reduce 13


state 216
	do_statement : DO statement WHILE '(' expression ')' . ';'  (49)

	';'  shift 227
	.  error


state 217
	formal_parameter : type IDENTIFIER .  (21)

	.  reduce 21


state 218
	function_header : type IDENTIFIER '(' formal_parameter_list ')' .  (16)

	.  reduce 16


state 219
	formal_parameters : formal_parameters ',' . formal_parameter  (19)

	ANYEXCEPTION  shift 1
	BEXP  shift 2
	BIT  shift 3
	INT  shift 8
	KMAP  shift 10
	STRING  shift 12
	TRUTHTABLE  shift 14
	.  error

	type  goto 198
	formal_parameter  goto 228


state 220
	if_then_statement : IF '(' . expression ')' statement  (46)
	if_then_else_statement : IF '(' . expression ')' statement_matched_if ELSE statement  (47)
	if_then_else_statement_matched_if : IF '(' . expression ')' statement_matched_if ELSE statement_matched_if  (48)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 229
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 221
	while_statement : WHILE '(' . expression ')' statement  (50)
	while_statement_matched_if : WHILE '(' . expression ')' statement_matched_if  (51)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 230
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 222
	if_then_else_statement : IF '(' expression ')' statement_matched_if ELSE . statement  (47)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 9
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 15
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 231
	block  goto 25
	statement_without_trailing_substatement  goto 26
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 223
	catch_clause : CATCH '(' formal_parameter ')' . block  (62)

	'{'  shift 17
	.  error

	block  goto 232


state 224
	array_access : IDENTIFIER '@' BITLITERAL '[' expression ']' .  (75)

	.  reduce 75


state 225
	array_access : IDENTIFIER '[' expression ']' '[' expression . ']'  (76)

	']'  shift 233
	.  error


state 226
	ad : vd '[' expression ']' '[' . expression ']'  (14)

	INTEGERLITERAL  shift 45
	BITLITERAL  shift 46
	STRINGLITERAL  shift 47
	BEXPRESSIONLITERAL  shift 48
	IDENTIFIER  shift 49
	'+'  shift 50
	'-'  shift 51
	'!'  shift 52
	NOT  shift 53
	'('  shift 54
	.  error

	expression  goto 234
	assignment  goto 57
	method_invocation  goto 58
	assignment_expression  goto 59
	conditional_expression  goto 60
	array_access  goto 61
	postfix_expression  goto 62
	literal  goto 63
	unary_expression  goto 64
	unary_expression_not_plus_minus  goto 65
	cast_expression  goto 66
	multiplicative_expression  goto 67
	additive_expression  goto 68
	relational_expression  goto 69
	equality_expression  goto 70
	nand_gate_expression  goto 71
	xnor_gate_expression  goto 72
	nor_gate_expression  goto 73
	and_expression  goto 74
	exclusive_or_expression  goto 75
	inclusive_or_expression  goto 76
	conditional_and_expression  goto 77
	conditional_or_expression  goto 78


state 227
	do_statement : DO statement WHILE '(' expression ')' ';' .  (49)

	.  reduce 49


state 228
	formal_parameters : formal_parameters ',' formal_parameter .  (19)

	.  reduce 19


state 229
	if_then_statement : IF '(' expression . ')' statement  (46)
	if_then_else_statement : IF '(' expression . ')' statement_matched_if ELSE statement  (47)
	if_then_else_statement_matched_if : IF '(' expression . ')' statement_matched_if ELSE statement_matched_if  (48)

	')'  shift 235
	.  error


state 230
	while_statement : WHILE '(' expression . ')' statement  (50)
	while_statement_matched_if : WHILE '(' expression . ')' statement_matched_if  (51)

	')'  shift 236
	.  error


state 231
	if_then_else_statement : IF '(' expression ')' statement_matched_if ELSE statement .  (47)

	.  reduce 47


state 232
	catch_clause : CATCH '(' formal_parameter ')' block .  (62)

	.  reduce 62


state 233
	array_access : IDENTIFIER '[' expression ']' '[' expression ']' .  (76)

	.  reduce 76


state 234
	ad : vd '[' expression ']' '[' expression . ']'  (14)

	']'  shift 237
	.  error


state 235
	if_then_statement : IF '(' expression ')' . statement  (46)
	if_then_else_statement : IF '(' expression ')' . statement_matched_if ELSE statement  (47)
	if_then_else_statement_matched_if : IF '(' expression ')' . statement_matched_if ELSE statement_matched_if  (48)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 202
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 203
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 204
	block  goto 25
	statement_without_trailing_substatement  goto 205
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_matched_if  goto 238
	if_then_else_statement_matched_if  goto 207
	while_statement_matched_if  goto 208
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 236
	while_statement : WHILE '(' expression ')' . statement  (50)
	while_statement_matched_if : WHILE '(' expression ')' . statement_matched_if  (51)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 202
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 203
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 211
	block  goto 25
	statement_without_trailing_substatement  goto 205
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_matched_if  goto 239
	if_then_else_statement_matched_if  goto 207
	while_statement_matched_if  goto 208
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 237
	ad : vd '[' expression ']' '[' expression ']' .  (14)

	.  reduce 14


state 238
	if_then_else_statement : IF '(' expression ')' statement_matched_if . ELSE statement  (47)
	if_then_else_statement_matched_if : IF '(' expression ')' statement_matched_if . ELSE statement_matched_if  (48)

	ELSE  shift 240
	.  error


state 239
	while_statement_matched_if : WHILE '(' expression ')' statement_matched_if .  (51)

	.  reduce 51


state 240
	if_then_else_statement : IF '(' expression ')' statement_matched_if ELSE . statement  (47)
	if_then_else_statement_matched_if : IF '(' expression ')' statement_matched_if ELSE . statement_matched_if  (48)

	BREAK  shift 4
	CONTINUE  shift 5
	DO  shift 6
	IF  shift 202
	RETURN  shift 11
	TRY  shift 13
	WHILE  shift 203
	IDENTIFIER  shift 16
	'{'  shift 17
	.  error

	statement  goto 231
	block  goto 25
	statement_without_trailing_substatement  goto 205
	if_then_statement  goto 27
	if_then_else_statement  goto 28
	while_statement  goto 29
	statement_matched_if  goto 241
	if_then_else_statement_matched_if  goto 207
	while_statement_matched_if  goto 208
	statement_expression  goto 30
	do_statement  goto 31
	break_statement  goto 32
	continue_statement  goto 33
	return_statement  goto 34
	try_statement  goto 35
	assignment  goto 36
	method_invocation  goto 37
	array_access  goto 38


state 241
	if_then_else_statement_matched_if : IF '(' expression ')' statement_matched_if ELSE statement_matched_if .  (48)

	.  reduce 48


State 144 contains 1 shift/reduce conflict.


83 terminals, 64 nonterminals
137 grammar rules, 242 states
